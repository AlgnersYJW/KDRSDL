function [ params ] = set_update_functions_default( params )
%SET_UPDATE_FUNCTIONS_DEFAULT Sets the update functions depending on input params
%
% Mehdi Bahri - Imperial College London
% July, 2016
%
% Last modified August, 2017

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Stopping criterion
params.stopping_criterion = @(vars, params) (...
    stop_max_error(vars, params) ...
);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Updaters
params.update_A = @(vars, params) (...
    update_A_L2(vars, params)...
);
params.update_B = @(vars, params) (...
    update_B_L2(vars, params)...
);
params.update_E = @(vars, params) ( ...
    update_E(vars, params) ...
);
params.update_RY = @(vars, params) (...
    update_RY_regR_L1(vars, params) ...
);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Behaviour that depends on the mean
if params.MEAN
    params.visualize = @(vars, params) (...
        visualize_with_mean(vars, params)...
    );
else
    params.visualize = @(vars, params) (...
        visualize_no_mean(vars, params)...
    );
end

end

